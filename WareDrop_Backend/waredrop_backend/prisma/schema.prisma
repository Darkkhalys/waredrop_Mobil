generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model items {
  item_id      Int            @id(map: "item_pk") @default(autoincrement())
  item_name    String         @unique(map: "item_name_uk") @db.VarChar(30)
  in_transit   Boolean?
  overall      overall[]
  transactions transactions[]
}

model overall {
  overall_item_id      Int
  overall_warehouse_id Int
  overall_quantity     Int
  items                items      @relation(fields: [overall_item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction, map: "relation_11_item_fk")
  warehouses           warehouses @relation(fields: [overall_warehouse_id], references: [warehouse_id], onDelete: NoAction, onUpdate: NoAction, map: "relation_11_warehouse_fk")

  @@id([overall_item_id, overall_warehouse_id], map: "relation_11_pk")
}

model transactions {
  trans_id           Int        @id(map: "transaction_pk") @default(autoincrement())
  trans_date         DateTime   @db.Date
  arrived_date       DateTime?  @db.Date
  target             String     @db.VarChar(30)
  trans_quantity     Int
  in_transit         Boolean?
  trans_worker_id    Int
  trans_warehouse_id Int
  trans_item_id      Int
  items              items      @relation(fields: [trans_item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_item_fk")
  warehouses         warehouses @relation(fields: [trans_warehouse_id], references: [warehouse_id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_warehouse_fk")
  worker             worker     @relation(fields: [trans_worker_id], references: [worker_id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_worker_fk")
}

model users {
  user_id       Int          @id(map: "user_pk") @default(autoincrement())
  user_name     String       @unique(map: "user_name_uk") @db.VarChar(30)
  user_password String       @db.VarChar(200)
  user_email    String       @unique(map: "user_email_uk") @db.VarChar(50)
  user_admin    Boolean?
  user_cookie   String?      @db.VarChar(100)
  warehouses    warehouses[]
}

model warehouses {
  warehouse_id      Int            @id(map: "warehouse_pk") @default(autoincrement())
  warehouse_name    String         @unique(map: "warehouse_name_uk") @db.VarChar(30)
  location          String         @db.VarChar(30)
  warehouse_user_id Int?
  overall           overall[]
  transactions      transactions[]
  users             users?         @relation(fields: [warehouse_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "warehouse_user_fk")
}

model worker {
  worker_id       Int            @id(map: "worker_pk") @default(autoincrement())
  worker_name     String         @unique(map: "worker_name_uk") @db.VarChar(20)
  worker_password String         @db.VarChar(200)
  phone_number    Int            @unique(map: "phone_number_uk")
  worker_cookie   String?        @db.VarChar(100)
  transactions    transactions[]
}
